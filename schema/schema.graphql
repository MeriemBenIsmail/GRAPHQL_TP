type Infos {
    name: String!
    firstname: String!
}
enum Gender {
    MALE
    FEMALE
}
type Student {
    id: ID!
    name: String!
    age: Int!
    gender: Gender!
    classroom: Classroom
}
type Classroom {
    id: ID!
    designation: String!
    students: [Student!]
}
type Query {
    hello(name: String): String!
    infos: Infos!
    getAllStudents: [Student]
    getStudent(id:ID!): Student
    getAllTodos: [Todo]
    getTodo(id:ID!): Todo
    getAllUsers: [User]
    getUser(id:ID!): User
}

type Mutation {
    createTodo(data: CreateTodoInput!): Todo
    updateTodo(data: UpdateTodoInput!): Todo
    deleteTodo(todoId: ID!): Todo
}
enum TodoStatus {
    WAITING
    IN_PROCESS
    CANCELLED
    DONE

}
type Todo {
    id: ID!
    name: String!
    content: String!
    status: TodoStatus!
    user: User

}
type User {
    id: ID!
    name: String!
    email: String!
    todos: [Todo!]
}

input CreateTodoInput {
    name: String!
    content: String!
    status: TodoStatus
    user: ID
}
input UpdateTodoInput {
    id: ID!
    name: String
    content: String
    status: TodoStatus
    user: ID
}

type Subscription {
    newTodo: Todo!
}